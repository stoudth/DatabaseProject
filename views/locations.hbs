<!--HANDLEBAR USE CITATION-->
<!--The handlebar use in the below code to generate the data table, insert, delete and add a dropdown is taken from the Node.js Starter App provided in this course-->
<!--Date: 2/25/2023-->
<!--Copied from: GitHub: osu-cs340-ecampus/nodejs-starter-app - Step 4-7 -->
<!--Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app-->

<body>
<nav>
    <h1>Locations</h1>
    <a href="index">Home</a> |
    <a href="locations"> Locations</a> | 
    <a href="classes">Classes</a> | 
    <a href="sessions">Sessions</a> | 
    <a href="routes">Routes</a> | 
    <a href="routesetters">RouteSetters</a> | 
    <a href="routetypes">RouteTypes</a>
</nav>

    <br><br>
    <div id="info">
        <fieldset>
            <p>Operations available for Locations: SELECT, INSERT, UPDATE, DELETE</p>
        </fieldset>
    </div>


{{!-- Create a table --}}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<table id="locations-table" border="1" cellpadding="5">
    {{!-- Header section --}}
    <thead>

        {{!-- For just the first row, we print each key of the row object as a header cell so we
        know what each column means when the page renders --}}
        <tr>
            <th>Location ID</th>
            <th>Location Name</th>
            <th>Street Address</th>
            <th>City</th>
            <th>State</th>
            <th>Zipcode</th>
            <th>Delete</th>
        </tr>
    </thead>

    {{!-- Body section --}}
    <tbody>

        {{!-- For each row, print the id, fname, lname, homeworld and age, in order --}}
        {{#each data}}
        <tr data-value="{{this.idLocation}}">
            <td>{{this.idLocation}}</td>
            <td>{{this.locationName}}</td>
            <td>{{this.streetAddress}}</td>
            <td>{{this.city}}</td>
            <td>{{this.state}}</td>
            <td>{{this.zipcode}}</td>
            <td><button onclick="deleteLocation({{this.idLocation}})">Delete</button></td>
        </tr>
        {{/each}}
    </tbody>
</table>
<script src="./js/delete_location.js"></script>

{{!-- Form to add a record to the table  --}}
<h2>Add a New Location</h2>
<p>To add a new location, please enter its information below and click 'Submit'!</p>
<form id="add-location-form-ajax">

    <label for="input-locationName">Location Name: </label>
    <input type="text" name="input-locationName" id="input-locationName" required>
    
    <label for="input-streetAddress">Street Address: </label>
    <input type="text" name="input-streetAddress" id="input-streetAddress" required>

    <label for="input-city">City: </label>
    <input type="text" name="input-city" id="input-city" required>

    <label for="input-state">State: </label>
    <input type="text" name="input-state" id="input-state" required>

    <label for="input-zipcode">Zipcode: </label>
    <input type="number" name="input-zipcode" id="input-zipcode" required>

    <input type="submit">
</form>
</div>

{{!-- Embed our javascript to handle the DOM manipulation and AJAX request --}}
<script src="./js/add_location.js"></script>

<h2>Update Location Form</h2>
<p>Whoops! Did you make a mistake entering the location's address info? No worries, this form has you covered!</p>
<form id="update-location-form-ajax">

    <label for="input-locationName">Location Name: </label>
    <select name="input-locationName" id="locationSelect">
        <option value="test">Select a Location</option>
        {{#each data}}
        <option value="{{this.idLocation}}">{{this.locationName}}</option>
        {{/each}}
    </select>

    <label for="input-streetAddress-update">Street Address: </label>
    <input type="text" name="input-streetAddress-update" id="input-streetAddress-update" required>
    <input type="submit">
</form>

<script src="./js/update_location.js"></script>
</body>
